<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-21T13:00:37 EET" name="All Test Suite" finished-at="2025-01-21T13:03:50 EET" duration-ms="193435">
    <groups>
    </groups>
    <test started-at="2025-01-21T13:00:37 EET" name="C:/Users/Teddy/Documents/GitHub/SKILLO_AT_16_TAF" finished-at="2025-01-21T13:03:50 EET" duration-ms="193435">
      <class name="gui.post.PostTests">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:gui.post.PostTests@2a65fe7c]" started-at="2025-01-21T13:00:54 EET" name="setUp" finished-at="2025-01-21T13:00:57 EET" duration-ms="2778" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void gui.post.PostTests.verifyUserCanCreatePost() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyUserCanCreatePost()[pri:0, instance:gui.post.PostTests@2a65fe7c]" started-at="2025-01-21T13:00:57 EET" name="verifyUserCanCreatePost" finished-at="2025-01-21T13:01:27 EET" duration-ms="30405" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Posts didn't increase by 1. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Posts didn't increase by 1. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at gui.post.PostTests.verifyUserCanCreatePost(PostTests.java:93)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanCreatePost -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:gui.post.PostTests@2a65fe7c]" started-at="2025-01-21T13:01:27 EET" name="tearDown" finished-at="2025-01-21T13:01:28 EET" duration-ms="1430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanCreatePost status=FAILURE method=PostTests.verifyUserCanCreatePost()[pri:0, instance:gui.post.PostTests@2a65fe7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:gui.post.PostTests@2a65fe7c]" started-at="2025-01-21T13:01:28 EET" name="setUp" finished-at="2025-01-21T13:01:30 EET" duration-ms="1993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void gui.post.PostTests.verifyUserCanLikeOtherMembersPost() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyUserCanLikeOtherMembersPost()[pri:1, instance:gui.post.PostTests@2a65fe7c]" started-at="2025-01-21T13:01:30 EET" name="verifyUserCanLikeOtherMembersPost" finished-at="2025-01-21T13:02:15 EET" duration-ms="45040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanLikeOtherMembersPost -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:gui.post.PostTests@2a65fe7c]" started-at="2025-01-21T13:02:15 EET" name="tearDown" finished-at="2025-01-21T13:02:16 EET" duration-ms="627" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanLikeOtherMembersPost status=SUCCESS method=PostTests.verifyUserCanLikeOtherMembersPost()[pri:1, instance:gui.post.PostTests@2a65fe7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:gui.post.PostTests@2a65fe7c]" started-at="2025-01-21T13:02:16 EET" name="setUp" finished-at="2025-01-21T13:02:18 EET" duration-ms="2203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void gui.post.PostTests.verifyUserCanDislikeOtherMembersPost()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyUserCanDislikeOtherMembersPost()[pri:2, instance:gui.post.PostTests@2a65fe7c]" started-at="2025-01-21T13:02:18 EET" name="verifyUserCanDislikeOtherMembersPost" finished-at="2025-01-21T13:03:03 EET" duration-ms="44297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanDislikeOtherMembersPost -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:gui.post.PostTests@2a65fe7c]" started-at="2025-01-21T13:03:03 EET" name="tearDown" finished-at="2025-01-21T13:03:03 EET" duration-ms="402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanDislikeOtherMembersPost status=SUCCESS method=PostTests.verifyUserCanDislikeOtherMembersPost()[pri:2, instance:gui.post.PostTests@2a65fe7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:gui.post.PostTests@2a65fe7c]" started-at="2025-01-21T13:03:03 EET" name="setUp" finished-at="2025-01-21T13:03:05 EET" duration-ms="2168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void gui.post.PostTests.verifyUserCanDeletePost()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyUserCanDeletePost()[pri:3, instance:gui.post.PostTests@2a65fe7c]" started-at="2025-01-21T13:03:05 EET" name="verifyUserCanDeletePost" finished-at="2025-01-21T13:03:25 EET" duration-ms="20266" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanDeletePost -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:gui.post.PostTests@2a65fe7c]" started-at="2025-01-21T13:03:25 EET" name="tearDown" finished-at="2025-01-21T13:03:26 EET" duration-ms="645" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanDeletePost status=SUCCESS method=PostTests.verifyUserCanDeletePost()[pri:3, instance:gui.post.PostTests@2a65fe7c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- gui.post.PostTests -->
      <class name="gui.registration.RegistrationNegativePathTests">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:gui.registration.RegistrationNegativePathTests@6302bbb1]" started-at="2025-01-21T13:03:36 EET" name="setUp" finished-at="2025-01-21T13:03:38 EET" duration-ms="2101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void gui.registration.RegistrationNegativePathTests.verifyTheUserCannotRegisterWithTakenUsername() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTheUserCannotRegisterWithTakenUsername()[pri:0, instance:gui.registration.RegistrationNegativePathTests@6302bbb1]" started-at="2025-01-21T13:03:38 EET" name="verifyTheUserCannotRegisterWithTakenUsername" finished-at="2025-01-21T13:03:42 EET" duration-ms="4749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserCannotRegisterWithTakenUsername -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:gui.registration.RegistrationNegativePathTests@6302bbb1]" started-at="2025-01-21T13:03:42 EET" name="tearDown" finished-at="2025-01-21T13:03:43 EET" duration-ms="376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserCannotRegisterWithTakenUsername status=SUCCESS method=RegistrationNegativePathTests.verifyTheUserCannotRegisterWithTakenUsername()[pri:0, instance:gui.registration.RegistrationNegativePathTests@6302bbb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:gui.registration.RegistrationNegativePathTests@6302bbb1]" started-at="2025-01-21T13:03:43 EET" name="setUp" finished-at="2025-01-21T13:03:45 EET" duration-ms="2275" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void gui.registration.RegistrationNegativePathTests.verifyTheUserCannotRegisterWithTakenEmail() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTheUserCannotRegisterWithTakenEmail()[pri:1, instance:gui.registration.RegistrationNegativePathTests@6302bbb1]" started-at="2025-01-21T13:03:45 EET" name="verifyTheUserCannotRegisterWithTakenEmail" finished-at="2025-01-21T13:03:50 EET" duration-ms="4541" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserCannotRegisterWithTakenEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:gui.registration.RegistrationNegativePathTests@6302bbb1]" started-at="2025-01-21T13:03:50 EET" name="tearDown" finished-at="2025-01-21T13:03:50 EET" duration-ms="400" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserCannotRegisterWithTakenEmail status=SUCCESS method=RegistrationNegativePathTests.verifyTheUserCannotRegisterWithTakenEmail()[pri:1, instance:gui.registration.RegistrationNegativePathTests@6302bbb1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- gui.registration.RegistrationNegativePathTests -->
      <class name="gui.login.LoginHappyPathsTest">
        <test-method is-config="true" signature="setupTestSuite()[pri:0, instance:gui.login.LoginHappyPathsTest@18078bef]" started-at="2025-01-21T13:00:37 EET" name="setupTestSuite" finished-at="2025-01-21T13:00:37 EET" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTestSuite -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:gui.login.LoginHappyPathsTest@18078bef]" started-at="2025-01-21T13:00:37 EET" name="setUp" finished-at="2025-01-21T13:00:41 EET" duration-ms="4583" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void gui.login.LoginHappyPathsTest.verifyTheUserCanLoginWithValidCredentials() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTheUserCanLoginWithValidCredentials()[pri:0, instance:gui.login.LoginHappyPathsTest@18078bef]" started-at="2025-01-21T13:00:41 EET" name="verifyTheUserCanLoginWithValidCredentials" finished-at="2025-01-21T13:00:46 EET" duration-ms="4699" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheUserCanLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:gui.login.LoginHappyPathsTest@18078bef]" started-at="2025-01-21T13:00:46 EET" name="tearDown" finished-at="2025-01-21T13:00:48 EET" duration-ms="1692" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheUserCanLoginWithValidCredentials status=SUCCESS method=LoginHappyPathsTest.verifyTheUserCanLoginWithValidCredentials()[pri:0, instance:gui.login.LoginHappyPathsTest@18078bef] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="cleanFiles()[pri:0, instance:gui.login.LoginHappyPathsTest@18078bef]" started-at="2025-01-21T13:03:50 EET" name="cleanFiles" finished-at="2025-01-21T13:03:50 EET" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanFiles -->
      </class> <!-- gui.login.LoginHappyPathsTest -->
      <class name="gui.registration.RegistrationHappyPath">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:gui.registration.RegistrationHappyPath@4135c3b]" started-at="2025-01-21T13:03:26 EET" name="setUp" finished-at="2025-01-21T13:03:29 EET" duration-ms="2541" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void gui.registration.RegistrationHappyPath.verifyUserCanRegisterWithValidData() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyUserCanRegisterWithValidData()[pri:0, instance:gui.registration.RegistrationHappyPath@4135c3b]" started-at="2025-01-21T13:03:29 EET" name="verifyUserCanRegisterWithValidData" finished-at="2025-01-21T13:03:35 EET" duration-ms="6384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCanRegisterWithValidData -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:gui.registration.RegistrationHappyPath@4135c3b]" started-at="2025-01-21T13:03:35 EET" name="tearDown" finished-at="2025-01-21T13:03:36 EET" duration-ms="542" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCanRegisterWithValidData status=SUCCESS method=RegistrationHappyPath.verifyUserCanRegisterWithValidData()[pri:0, instance:gui.registration.RegistrationHappyPath@4135c3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- gui.registration.RegistrationHappyPath -->
      <class name="gui.login.LoginNegativePathsTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:gui.login.LoginNegativePathsTest@4562e04d]" started-at="2025-01-21T13:00:48 EET" name="setUp" finished-at="2025-01-21T13:00:50 EET" duration-ms="2374" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void gui.login.LoginNegativePathsTest.verifyUserCannotLoginWithWrongUserName() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyUserCannotLoginWithWrongUserName()[pri:0, instance:gui.login.LoginNegativePathsTest@4562e04d]" started-at="2025-01-21T13:00:50 EET" name="verifyUserCannotLoginWithWrongUserName" finished-at="2025-01-21T13:00:53 EET" duration-ms="2770" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserCannotLoginWithWrongUserName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:gui.login.LoginNegativePathsTest@4562e04d]" started-at="2025-01-21T13:00:53 EET" name="tearDown" finished-at="2025-01-21T13:00:54 EET" duration-ms="1047" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserCannotLoginWithWrongUserName status=SUCCESS method=LoginNegativePathsTest.verifyUserCannotLoginWithWrongUserName()[pri:0, instance:gui.login.LoginNegativePathsTest@4562e04d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- gui.login.LoginNegativePathsTest -->
    </test> <!-- C:/Users/Teddy/Documents/GitHub/SKILLO_AT_16_TAF -->
  </suite> <!-- All Test Suite -->
</testng-results>
